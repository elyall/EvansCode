function WhiskerImaging

% Initialize Saving
gd.Internal.save.path = strcat('E:\Evan\',datestr(now,'yymmdd'));
gd.Internal.save.base = '0000_c2';
gd.Internal.save.index = 1;
gd.Internal.save.filename = fullfile(gd.Internal.save.path, strcat(gd.Internal.save.base, num2str(gd.Internal.save.index),'.raw'));

% Initialize Imaging
gd.Internal.imaging.port = 'COM5';
gd.Internal.imaging.initFile = 'C:\Users\User\Documents\MATLAB\iOS\CamFiles\T_1m60_12-bits_2_tap_ext_trig.ccf';
gd.Experiment.imaging.frameRate = 200;   %hz
gd.Experiment.imaging.brightness = 1.5625;
gd.Experiment.imaging.gain = 2.823;
% gd.Experiment.imaging.exposure = 0.8287;
gd.Experiment.imaging.shutter = .984;

% Display parameters
Display.units = 'pixels';
Display.position = [100, 100, 1000, 600];


%% Generate GUI

% Create figure
gd.gui.fig = figure(...
    'NumberTitle',          'off',...
    'Name',                 'Whisker Imaging',...
    'Units',                Display.units,...
    'Position',             Display.position,...
    'ToolBar',              'none',...
    'MenuBar',              'none',...
    'DeleteFcn',            @(hObject,eventdata)closeFig(hObject,eventdata,guidata(hObject)));

% Create file selection
% panel
gd.gui.file.panel = uipanel(...
    'Title',                'File Information',...
    'Parent',               gd.gui.fig,...
    'Units',                'Normalized',...
    'Position',             [0, .8, 1, .2]);
% select directory
gd.gui.file.dir = uicontrol(...
    'Style',                'pushbutton',...
    'String',               'Select Directory',...
    'Parent',               gd.gui.file.panel,...
    'Units',                'normalized',...
    'Position',             [0,0,.2,1],...
    'Callback',             @(hObject,eventdata)ChooseDir(hObject, eventdata, guidata(hObject)));
% basename input
gd.gui.file.base = uicontrol(...
    'Style',                'edit',...
    'String',               gd.Internal.save.base,...
    'Parent',               gd.gui.file.panel,...
    'Units',                'normalized',...
    'Position',             [.25,.3,.5,.5],...
    'Callback',             @(hObject,eventdata)CreateFilename(guidata(hObject)));
gd.gui.file.baseText = uicontrol(...
    'Style',                'text',...
    'String',               'Basename',...
    'Parent',               gd.gui.file.panel,...
    'Units',                'normalized',...
    'Position',             [.25,.8,.5,.2]);
% file index
gd.gui.file.index = uicontrol(...
    'Style',                'edit',...
    'String',               num2str(gd.Internal.save.index),...
    'Parent',               gd.gui.file.panel,...
    'Units',                'normalized',...
    'Position',             [.8,.3,.15,.5],...
    'Callback',             @(hObject,eventdata)CreateFilename(guidata(hObject)));
gd.gui.file.indexText = uicontrol(...
    'Style',                'text',...
    'String',               'File Index',...
    'Parent',               gd.gui.file.panel,...
    'Units',                'normalized',...
    'Position',             [.8,.8,.15,.2]);
% display filename
gd.gui.file.filename = uicontrol(...
    'Style',                'text',...
    'String',               '',...
    'Parent',               gd.gui.file.panel,...
    'Units',                'normalized',...
    'Position',             [.2,.05,.8,.2]);

% Create controls
% panel
gd.gui.control.panel = uipanel(...
    'Title',                'Controls',...
    'Parent',               gd.gui.fig,...
    'Units',                'Normalized',...
    'Position',             [0, 0, .2, .8]);
% preview control
gd.gui.control.preview = uicontrol(...
    'Style',                'togglebutton',...
    'String',               'Preview',...
    'Parent',               gd.gui.control.panel,...
    'Units',                'normalized',...
    'Position',             [0,.8,1,.2],...
    'Callback',             @(hObject,eventdata)PreviewImages(hObject, eventdata, guidata(hObject)));
% image control
gd.gui.control.run = uicontrol(...
    'Style',                'togglebutton',...
    'String',               'Capture Images?',...
    'Parent',               gd.gui.control.panel,...
    'Units',                'normalized',...
    'Position',             [0,.6,1,.2],...
    'BackgroundColor',      [0,1,0],...
    'Callback',             @(hObject,eventdata)CaptureImages(hObject, eventdata, guidata(hObject)));
% trigger control
gd.gui.control.trigger = uicontrol(...
    'Style',                'togglebutton',...
    'String',               'Trigger: External',...
    'Parent',               gd.gui.control.panel,...
    'Units',                'normalized',...
    'Position',             [0,.4,1,.2],...
    'Callback',             @(hObject,eventdata)ChangeSource(hObject, eventdata, guidata(hObject)));
% snap control
gd.gui.control.snap = uicontrol(...
    'Style',                'pushbutton',...
    'String',               'Take Frame',...
    'Parent',               gd.gui.control.panel,...
    'Units',                'normalized',...
    'Position',             [0,.2,1,.2],...
    'Callback',             @(hObject,eventdata)TakeFrame(hObject, eventdata, guidata(hObject)));
% frame rate
gd.gui.control.frameRate = uicontrol(...
    'Style',                'edit',...
    'String',               gd.Experiment.imaging.frameRate,...
    'Parent',               gd.gui.control.panel,...
    'Units',                'normalized',...
    'Position',             [0,0,1,.1],...
    'Callback',             @(hObject,eventdata)ChangeFrameRate(hObject, eventdata, guidata(hObject)));
gd.gui.control.frameRateText = uicontrol(...
    'Style',                'text',...
    'String',               'Frame Rate (video file)',...
    'Parent',               gd.gui.control.panel,...
    'Units',                'normalized',...
    'Position',             [0,.1,1,.05]);

% Create Axes
% panel
gd.gui.axes.panel = uipanel(...
    'Title',                'Video',...
    'Parent',               gd.gui.fig,...
    'Units',                'Normalized',...
    'Position',             [.2, .15, .8, .65]);
% axes
gd.gui.axes.axes = axes(...
    'Parent',               gd.gui.axes.panel,...
    'Units',                'normalized',...
    'Position',             [.2,0,.8,1]);
axis square off
% format selector
gd.gui.axes.format = uicontrol(...
    'Style',                'popupmenu',...
    'String',               {'1280x960','640x512'},...
    'Value',                2,...
    'Parent',               gd.gui.axes.panel,...
    'Units',                'normalized',...
    'Position',             [0,.9,.2,.1],...
    'Callback',             @(hObject,eventdata)initCamera(guidata(hObject)));
% frames acquired counter
gd.gui.axes.acqCounter = uicontrol(...
    'Style',                'text',...
    'String',               'Frames Acquired: 0',...
    'Parent',               gd.gui.axes.panel,...
    'Units',                'normalized',...
    'Position',             [0,.8,.2,.1],...
    'HorizontalAlignment',  'right');
% frames acquired counter
gd.gui.axes.saveCounter = uicontrol(...
    'Style',                'text',...
    'String',               'Frames Saved: 0',...
    'Parent',               gd.gui.axes.panel,...
    'Units',                'normalized',...
    'Position',             [0,.75,.2,.1],...
    'HorizontalAlignment',  'right');

% Settings
% panel
gd.gui.sliders.panel = uipanel(...
    'Title',                'Settings',...
    'Parent',               gd.gui.fig,...
    'Units',                'Normalized',...
    'Position',             [.2, 0, .8, .15]);
% brightness
gd.gui.sliders.Brightness = uicontrol(...
    'Style',                'slider',...
    'Parent',               gd.gui.sliders.panel,...
    'Units',                'normalized',...
    'Position',             [.15,.66,.75,.33],...
    'UserData',             'Brightness',...
    'Min',                  0,...
    'Max',                  24.9023,...
    'Value',                gd.Experiment.imaging.brightness,...
    'Callback',             @(hObject,eventdata)ChangeSetting(hObject, eventdata, guidata(hObject)));
gd.gui.sliders.text.Brightness = uicontrol(...
    'Style',                'text',...
    'String',               sprintf('Brightness: %.3f',gd.Experiment.imaging.brightness),...
    'Parent',               gd.gui.sliders.panel,...
    'Units',                'normalized',...
    'Position',             [0,.66,.15,.33],...
    'HorizontalAlignment',  'right');
% gain
gd.gui.sliders.Gain = uicontrol(...
    'Style',                'slider',...
    'Parent',               gd.gui.sliders.panel,...
    'Units',                'normalized',...
    'Position',             [.15,.33,.75,.33],...
    'UserData',             'Gain',...
    'Min',                  0,...
    'Max',                  18,...
    'Value',                gd.Experiment.imaging.gain,...
    'Callback',             @(hObject,eventdata)ChangeSetting(hObject, eventdata, guidata(hObject)));
gd.gui.sliders.text.Gain = uicontrol(...
    'Style',                'text',...
    'String',               sprintf('Gain: %.3f',gd.Experiment.imaging.gain),...
    'Parent',               gd.gui.sliders.panel,...
    'Units',                'normalized',...
    'Position',             [0,.33,.15,.33],...
    'HorizontalAlignment',  'right');
% gd.gui.sliders.auto.Gain = uicontrol(...
%     'Style',                'checkbox',...
%     'String',               'Auto?',...
%     'Parent',               gd.gui.sliders.panel,...
%     'Units',                'normalized',...
%     'UserData',             'Gain',...
%     'Position',             [.9,.33,.1,.33],...
%     'Callback',             @(hObject,eventdata)ToggleAuto(hObject, eventdata, guidata(hObject)));
% shutter
gd.gui.sliders.Shutter = uicontrol(...
    'Style',                'slider',...
    'Parent',               gd.gui.sliders.panel,...
    'Units',                'normalized',...
    'Position',             [.15,0,.75,.33],...
    'UserData',             'Shutter',...
    'Min',                  0.008,...
    'Max',                  10,... %999.7499
    'Value',                gd.Experiment.imaging.shutter,...
    'Callback',             @(hObject,eventdata)ChangeSetting(hObject, eventdata, guidata(hObject)));
gd.gui.sliders.text.Shutter = uicontrol(...
    'Style',                'text',...
    'String',               sprintf('Shutter: %.3f',gd.Experiment.imaging.shutter),...
    'Parent',               gd.gui.sliders.panel,...
    'Units',                'normalized',...
    'Position',             [0,0,.15,.33],...
    'HorizontalAlignment',  'right');
% gd.gui.sliders.auto.Shutter = uicontrol(...
%     'Style',                'checkbox',...
%     'String',               'Auto?',...
%     'Parent',               gd.gui.sliders.panel,...
%     'Units',                'normalized',...
%     'UserData',             'Shutter',...
%     'Position',             [.9,0,.1,.33],...
%     'Callback',             @(hObject,eventdata)ToggleAuto(hObject, eventdata, guidata(hObject)));
% exposure
% gd.gui.sliders.exposure = uicontrol(...
%     'Style',                'slider',...
%     'Parent',               gd.gui.sliders.panel,...
%     'Units',                'normalized',...
%     'Position',             [.2,.25,.8,.25],...
%     'UserData',             'Exposure',...
%     'Min',                  -7.45,...
%     'Max',                  2.4136,...
%     'Value',                gd.Experiment.imaging.exposure,...
%     'Callback',             @(hObject,eventdata)ChangeSetting(hObject, eventdata, guidata(hObject)));
% gd.gui.sliders.text.Exposure = uicontrol(...
%     'Style',                'text',...
%     'String',               sprintf('Exposure: %.3f',gd.Experiment.imaging.exposure),...
%     'Parent',               gd.gui.sliders.panel,...
%     'Units',                'normalized',...
%     'Position',             [0,.25,.2,.25],...
%     'HorizontalAlignment',  'right');
% propinfo(gd.src,'Shutter')

gd = CreateFilename(gd);
try
    gd = initCamera(gd);
catch ME
    error('Problem connecting to camera -> try ''imaqreset'' (may need to open FlyCap2 and set camera to Mode 0)');
end
guidata(gd.gui.fig,gd);
end

function closeFig(hObject,eventdata,gd)
% delete(imaqfind);
close(hObject);
end

%% File Saving
function ChooseDir(hObject, eventdata, gd)
temp = uigetdir(gd.Internal.save.path, 'Choose directory to save to');
if ischar(temp)
    gd.Internal.save.path = temp;
    guidata(hObject, gd);
end
gd=CreateFilename(gd);
guidata(hObject,gd);
end

function gd=CreateFilename(gd)
gd.Internal.save.filename = fullfile(gd.Internal.save.path, strcat(gd.gui.file.base.String, '_', gd.gui.file.index.String, '.avi'));
gd.gui.file.filename.String = gd.Internal.save.filename;
if exist(gd.Internal.save.filename, 'file')
    gd.gui.file.filename.BackgroundColor = [1,0,0];
else
    gd.gui.file.filename.BackgroundColor = [.94,.94,.94];
end
guidata(gd.gui.fig,gd);
end

%% Initialization
function gd = initCamera(gd)
if isfield(gd,'vid');
    delete(gd.vid);
end
if gd.gui.axes.format.Value == 1
    gd.vid = videoinput('pointgrey', 1, 'F7_Raw8_1280x1024_Mode0');
elseif gd.gui.axes.format.Value == 2
    gd.vid = videoinput('pointgrey', 1, 'F7_Raw8_640x512_Mode1');
end
gd.src = getselectedsource(gd.vid);
gd.vid.ReturnedColorspace = 'grayscale';

% Set camera settings
gd.src.Brightness = gd.Experiment.imaging.brightness;
% gd.src.Exposure = gd.Experiment.imaging.exposure;
gd.src.ExposureMode = 'Off'; %'Off' or 'Auto' or 'Manual'
gd.src.FrameRatePercentage = 100;
gd.src.FrameRatePercentageMode = 'Manual'; %'Off' or 'Auto' or 'Manual'
gd.src.Gain = gd.Experiment.imaging.gain;
gd.src.GainMode = 'Manual'; %'Auto' or 'Manual'
gd.src.Shutter = gd.Experiment.imaging.shutter; 
gd.src.ShutterMode = 'Manual'; %'Auto' or 'Manual'
% gd.src.TriggerDelay = 0;
gd.src.TriggerDelayMode = 'Off'; %'Off' or 'Manual'

% Create out pulses
gd.src.Strobe2 = 'On';
gd.src.Strobe2Polarity = 'High';

% Set trigger
gd=ChangeSource(gd.gui.control.trigger, [], gd);

guidata(gd.gui.fig,gd);
end


%% Change settings
function gd=ChangeSource(hObject, eventdata, gd)
if hObject.Value
    set(hObject,'String','Trigger: Internal','BackgroundColor',[0,0,0],'ForegroundColor',[1,1,1]);
    triggerconfig(gd.vid, 'immediate'); % internal
    gd.vid.FramesPerTrigger = Inf;
else
    set(hObject,'String','Trigger: External','BackgroundColor',[.94,.94,.94],'ForegroundColor',[0,0,0]);
    triggerconfig(gd.vid, 'hardware', 'risingEdge', 'externalTriggerMode0-Source0'); % external
    gd.vid.FramesPerTrigger = 1;
    gd.vid.TriggerRepeat = Inf;
end
if ~isempty(eventdata)
    guidata(hObject,gd);
end
end

function ChangeSetting(hObject, eventdata, gd)
gd.src.(hObject.UserData) = hObject.Value;
guidata(hObject,gd);
gd.gui.sliders.text.(hObject.UserData).String = sprintf('%s: %.3f',hObject.UserData,hObject.Value);
end

function ToggleAuto(hObject, eventdata, gd)
if hObject.Value
    gd.src.(sprintf('%sMode',hObject.UserData)) = 'Auto';
    gd.gui.sliders.(hObject.UserData).Enable = 'off';
else
    gd.src.(sprintf('%sMode',hObject.UserData)) = 'Manual';
    gd.gui.sliders.(hObject.UserData).Enable = 'on';
end
guidata(hObject,gd);
end

function ChangeFrameRate(hObject, eventdata, gd)
newValue = str2num(hObject.String);
if newValue <= 0
    newValue = .0000001;
    hObject.String = num2str(newValue);
end
gd.Experiment.imaging.frameRate = newValue;
guidata(hObject,gd);
end


%% Imaging
function TakeFrame(hObject, eventdata, gd)
frame = getsnapshot(gd.vid);
axes(gd.gui.axes.axes);
imagesc(frame); 
colormap gray; axis square off
end

function PreviewImages(hObject, eventdata, gd)
if hObject.Value
    axes(gd.gui.axes.axes);
    hImage = image(zeros(gd.vid.VideoResolution));
    preview(gd.vid, hImage);
    axis square off
    hObject.String = 'Stop Preview';
else
    stoppreview(gd.vid);
    hObject.String = 'Preview';
end
guidata(hObject,gd);
end

function gd = createFile(gd)
gd.vid.LoggingMode = 'disk'; %disk&memory
[p,~]=fileparts(gd.Internal.save.filename);
if ~exist(p,'dir')
    mkdir(p);
end
DiskLogger = VideoWriter(gd.Internal.save.filename, 'Grayscale AVI');
DiskLogger.FrameRate = gd.Experiment.imaging.frameRate;
gd.vid.DiskLogger = DiskLogger;
end

function CaptureImages(hObject, eventdata, gd)
if hObject.Value
    % Update GUI
    set(hObject,'String','Stop','BackgroundColor',[1,0,0]);
    set([gd.gui.file.dir,gd.gui.file.base,gd.gui.file.index],'Enable','off');
    set([gd.gui.control.trigger,gd.gui.control.snap,gd.gui.control.frameRate,gd.gui.axes.format],'Enable','off');
    set([gd.gui.sliders.Brightness,gd.gui.sliders.Gain,gd.gui.sliders.Shutter],'Enable','off');
    
    % Reset camera and frame counter
    flushdata(gd.vid);
    gd.gui.axes.acqCounter.String = 'Frames Acquired: 0';
    
    % Create file and start recording
    gd = createFile(gd);
    start(gd.vid);
    while hObject.Value
        pause(.5);
        gd.gui.axes.acqCounter.String = sprintf('Frames Acquired: %d',gd.vid.FramesAcquired);
        gd.gui.axes.saveCounter.String = sprintf('Frames Saved: %d',gd.vid.DiskLoggerFrameCount);
    end
    
else
    % Stop recording
    hObject.String = 'Stopping...';
    stop(gd.vid);
    
    % Update frame count
    gd.gui.axes.acqCounter.String = sprintf('Frames Acquired: %d',gd.vid.FramesAcquired);
    gd.gui.axes.saveCounter.String = sprintf('Frames Saved: %d',gd.vid.DiskLoggerFrameCount);
    
    % Make sure all frames get saved to disk
    while gd.vid.FramesAcquired ~= gd.vid.DiskLoggerFrameCount
        pause(.1);
        gd.gui.axes.acqCounter.String = sprintf('Frames Acquired: %d',gd.vid.FramesAcquired);
        gd.gui.axes.saveCounter.String = sprintf('Frames Saved: %d',gd.vid.DiskLoggerFrameCount);
    end
    
    % Index filename
    if gd.vid.DiskLoggerFrameCount~=0
        fprintf('Finished: %d frames saved to: %s\n',gd.vid.DiskLoggerFrameCount,gd.Internal.save.filename);
        gd.gui.file.index.String = num2str(str2double(gd.gui.file.index.String) + 1);
        gd = CreateFilename(gd);
    end
    
    % Update GUI
    guidata(hObject,gd);
    set([gd.gui.file.dir,gd.gui.file.base,gd.gui.file.index],'Enable','on');
    set([gd.gui.control.trigger,gd.gui.control.snap,gd.gui.control.frameRate,gd.gui.axes.format],'Enable','on');
    set([gd.gui.sliders.Brightness,gd.gui.sliders.Gain,gd.gui.sliders.Shutter],'Enable','on');
    set(hObject,'String','Capture Images?','BackgroundColor',[0,1,0]);
end
end